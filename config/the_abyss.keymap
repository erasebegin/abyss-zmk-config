// vim: set ft=dts:

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS 0
#define GA1 1
#define GA2 2
#define GA3 3
#define NUM 4
#define FUN 5
#define SYM 6
#define NAV 7
#define SCNSHT  LG(LS(S))
#define TSK_MGR LC(LS(ESC))

/ {
    macros {
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BAS";
            bindings = <
&mt TAB Q    &kp W           &mt LG(SPACE) D  &kp F                  &kp K               &kp J                        &kp U        &kp R      &kp L    &kp SEMI
&kp A        &lt 2 S         &kp E            &lt 4 T                &kp G               &kp Y                        &lt 1 N      &kp I      &kp O    &kp H
&mt LCTRL Z  &mt LEFT_ALT X  &kp C            &kp V                  &mt LEFT_GUI B      &kp P                        &kp M        &kp COMMA  &kp DOT  &mt SLASH SQT
                             &none            &mt LEFT_SHIFT ESCAPE  &mt LEFT_GUI ENTER  &mt LA(BACKSPACE) BACKSPACE  &lt 3 SPACE  &none
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp COMMA         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH   &kp KP_PLUS  &none   &kp NON_US_BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp COLON         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERIOD  &none        &none   &kp PLUS              &kp ASTERISK          &kp MINUS
&kp LEFT_CONTROL  &kp N7        &kp N8        &kp N9        &kp N0      &kp MINUS    &kp N1  &kp N2                &kp N3                &kp EQUAL
                                &tg_game      &kp DEL       &sl 2       &sl 3        &kp N0  &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp C_MUTE  &kp PSCRN   &kp PAUSE_BREAK  &kp KP_NUMLOCK  &kp C_VOL_UP
&trans  &trans  &trans  &trans  &trans  &bt_sel     &f1_        &f5_             &f9_            &media
&trans  &trans  &trans  &trans  &trans  &bt_clr     &kp SCNSHT  &kp LG(L)        &kp TSK_MGR     &kp C_VOL_DN
                &trans  &trans  &trans  &trans      &output     &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp SQT       &kp HASH   &kp NON_US_BACKSLASH  &kp SLASH        &kp PIPE2         &kp AT_SIGN     &kp DOUBLE_QUOTES  &kp LEFT_BRACKET                 &kp RIGHT_BRACKET                  &kp PIPE
&kp ASTERISK  &kp EQUAL  &kp PLUS              &kp EXCLAMATION  &kp GRAVE         &kp MINUS       &kp QUESTION       &mt LEFT_BRACE LEFT_PARENTHESIS  &mt RIGHT_BRACE RIGHT_PARENTHESIS  &kp AMPERSAND
&kp PIPE      &kp CARET  &kp LBRC              &kp DOLLAR       &kp LA(NUMBER_2)  &kp UNDERSCORE  &kp COLON          &kp LESS_THAN                    &kp GREATER_THAN                   &kp PERCENT
                         &trans                &trans           &trans            &trans          &trans             &trans
            >;
        };

        navigation_layer {
            label = "NAV";
            bindings = <
&kp INS  &kp LS(LC(TAB))  &kp LC(TAB)  &kp LG(LEFT_BRACKET)  &trans         &trans             &trans    &trans  &trans               &trans
&kp TAB  &hx_left         &hx_right    &none                 &none          &mt LA(LEFT) LEFT  &kp DOWN  &kp UP  &mt LA(RIGHT) RIGHT  &trans
&kp DEL  &kp LG(LS(TAB))  &kp LG(TAB)  &trans                &kp PG_DN      &trans             &trans    &trans  &trans               &trans
                          &trans       &kp LC(LEFT_ARROW)    &kp LC(RIGHT)  &trans             &trans    &trans
            >;
        };
    };

    /*                KEY POSITIONS

      ╭────────────────────╮ ╭────────────────────╮
      │  0   1   2   3   4 │ │  5   6   7   8   9 │
      │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
      │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
      ╰───────╮ 30  31  32 │ │ 33  34  35 ╭───────╯
              ╰────────────╯ ╰────────────╯        */

    combos {
        compatible = "zmk,combos";

        #define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT, LAYERS) \
            combo_##NAME { \
                timeout-ms = <TIMEOUT>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
                layers = <LAYERS>; \
                slow-release; \
            };

    #define DEFAULT_TIME 64
        #define LONG_TIME    128

        #define ALL_LAYERS     BAS GA1 GA2 GA3 NUM FUN SYM NAV NUM NAV
        #define DEFAULT_LAYERS BAS     GA2 GA3 NUM FUN SYM NAV NUM NAV
        #define NONBASE_LAYERS         GA2 GA3 NUM FUN SYM NAV NUM NAV

        COMBO(l_bail    , &bail     , 30 31, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(r_bail    , &bail     , 34 35, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(tab       , &kp TAB   , 13 31, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(del       , &kp DEL   , 16 34, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(caps_word , &caps_word, 31 34, DEFAULT_TIME, DEFAULT_LAYERS)

        COMBO(l_sk_ctrl , &sk LCTRL , 13 23, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(l_sk_shift, &sk LSHIFT, 12 22, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(l_sk_alt  , &sk LALT  , 11 21, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(l_win     , &kp LWIN  , 10 20, DEFAULT_TIME, DEFAULT_LAYERS)

        COMBO(r_sk_ctrl , &sk LCTRL , 16 26, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(r_sk_shift, &sk RSHIFT, 17 27, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(r_sk_alt  , &sk RALT  , 18 28, DEFAULT_TIME, DEFAULT_LAYERS)
        COMBO(r_win     , &kp LWIN  , 19 29, DEFAULT_TIME, DEFAULT_LAYERS)

        COMBO(num_bspc  , &kp BSPC  , 6  16, DEFAULT_TIME, NUM           )
        COMBO(num_comma , &kp COMMA , 7  17, DEFAULT_TIME, NUM           )
        COMBO(num_space , &kp SPACE , 8  18, DEFAULT_TIME, NUM           )
};

behaviors {
    bt_sel: tap_dance_bluetooth_select {
        compatible = "zmk,behavior-tap-dance";
        label = "BLUETOOTH_SELECT";
        #binding-cells = <0>;
        tapping-term-ms = <256>;
        bindings = <&bt BT_SEL 0>, <&bt BT_SEL 1>, <&bt BT_SEL 2>;
    };

    bt_clr: tap_dance_bluetooth_clear {
        compatible = "zmk,behavior-tap-dance";
        label = "BLUETOOTH_CLEAR";
        #binding-cells = <0>;
        tapping-term-ms = <256>;
        bindings = <&trans>, <&bt BT_CLR>;
    };

    tg_game: tg_game {
        compatible = "zmk,behavior-tap-dance";
        label = "TOGGLE_GAME";
        #binding-cells = <0>;
        tapping-term-ms = <512>;
        bindings = <&to 0>, <&to 0>;
    };

    n0_: tap_dance_n0_ {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_N0_N9";
        #binding-cells = <0>;
        tapping-term-ms = <512>;
        bindings =
            <&kp N0>,
            <&kp N1>,
            <&kp N2>,
            <&kp N3>,
            <&kp N4>,
            <&kp N5>,
            <&kp N6>,
            <&kp N7>,
            <&kp N8>,
            <&kp N9>;
    };

    f1_: tap_dance_f1_ {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_F1_F24";
        #binding-cells = <0>;
        tapping-term-ms = <512>;
        bindings =
            <&kp F1>,
            <&kp F2>,
            <&kp F3>,
            <&kp F4>,
            <&kp F5>,
            <&kp F6>,
            <&kp F7>,
            <&kp F8>,
            <&kp F9>,
            <&kp F10>,
            <&kp F11>,
            <&kp F12>,
            <&kp F13>,
            <&kp F14>,
            <&kp F15>,
            <&kp F16>,
            <&kp F17>,
            <&kp F18>,
            <&kp F19>,
            <&kp F20>,
            <&kp F22>,
            <&kp F23>,
            <&kp F24>;
    };

    f5_: tap_dance_f5_ {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_F5_F24";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings =
            <&kp F5>,
            <&kp F6>,
            <&kp F7>,
            <&kp F8>,
            <&kp F9>,
            <&kp F10>,
            <&kp F11>,
            <&kp F12>,
            <&kp F13>,
            <&kp F14>,
            <&kp F15>,
            <&kp F16>,
            <&kp F17>,
            <&kp F18>,
            <&kp F19>,
            <&kp F20>,
            <&kp F22>,
            <&kp F23>,
            <&kp F24>;
    };

    f9_: tap_dance_f9_ {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_F9_F24";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings =
            <&kp F9>,
            <&kp F10>,
            <&kp F11>,
            <&kp F12>,
            <&kp F13>,
            <&kp F14>,
            <&kp F15>,
            <&kp F16>,
            <&kp F17>,
            <&kp F18>,
            <&kp F19>,
            <&kp F20>,
            <&kp F22>,
            <&kp F23>,
            <&kp F24>;
    };

    media: tap_dance_media {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_MEDIA";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
    };

    output: tap_output {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_OUTPUT";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&out OUT_USB>, <&out OUT_BLE>;
    };

    esc_tab: mod_morph_esc_tab {
        compatible = "zmk,behavior-mod-morph";
        label = "ESC_TAB";
        #binding-cells = <0>;
        bindings = <&kp ESC>, <&kp TAB>;

        mods = <(MOD_LALT|MOD_RALT)>;
        keep-mods = <(MOD_LALT|MOD_RALT)>;
    };

    et_l: esc_tab_layer_x {
        compatible = "zmk,behavior-hold-tap";
        label = "ESC_TAB_LAYER";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <250>;
        bindings = <&mo>, <&esc_tab>;
    };
};

macros {
    // No way to cancel sticky keys so using F24 as a NOOP proxy
    // Bailing out of any sticky keyboard state macro

    bail: macro_bail {
        label = "MACRO_BAIL";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_tap>, <&kp F24 &to 0>;
    };

    noop: macro_noop {
        label = "MACRO_NOOP";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_tap>, <&kp F24>;
    };

    hx_left: hx_left {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LEFT_BRACKET &kp LEFT_BRACKET>;
        label = "HX_LEFT";
    };

    hx_right: hx_right {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp RIGHT_BRACKET &kp RIGHT_BRACKET>;
        label = "HX_RIGHT";
    };
};

};

&sl {
    release-after-ms = <800>;
    no-sticky-after-hold-ms = <400>;
};

&sk {
    release-after-ms = <800>;
    no-sticky-after-hold-ms = <400>;
    quick-release;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <222>;
};

&caps_word { continue-list = <UNDERSCORE MINUS BSPC>; };

// Empty keymap
// &trans &trans &trans &trans &trans /* */ &trans &trans &trans &trans &trans
// &trans &trans &trans &trans &trans /* */ &trans &trans &trans &trans &trans
// &trans &trans &trans &trans &trans /* */ &trans &trans &trans &trans &trans
//               &trans &trans &trans /* */ &trans &trans &trans
